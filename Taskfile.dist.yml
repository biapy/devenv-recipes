tasks:
  ci:
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:fix:
    aliases:
      - fix
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    desc: "\U0001F9F9 Run all fixing tasks"
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:fix:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:fix:nix:
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:fix:nix:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:fix:nix:statix:
    cmds:
      - statix fix
    desc: "\U0001F9F9 Fix ❄️Nix files with statix"
    requires:
      vars:
        - DEVENV_ROOT
  ci:format:
    aliases:
      - format
      - fmt
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    desc: "\U0001F3A8 Run all formatting tasks"
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:format:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:format:md:
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:format:md:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:format:md:mdformat:
    aliases:
      - mdformat
    cmds:
      - mdformat "${DEVENV_ROOT}"
    desc: "\U0001F3A8 Format \U0001F4DDMarkdown files with mdformat"
    requires:
      vars:
        - DEVENV_ROOT
  ci:format:nix:
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:format:nix:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:format:nix:nixfmt:
    aliases:
      - nixfmt
    cmds:
      - /nix/store/p1fba2h03iawzgfaya2zlx0mfd5sikq3-nixfmt-tree/bin/treefmt --tree-root "${DEVENV_ROOT}"
    desc: "\U0001F3A8 Format ❄️Nix files with nixfmt"
    requires:
      vars:
        - DEVENV_ROOT
  ci:format:sh:
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:format:sh:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:format:sh:shfmt:
    aliases:
      - shfmt
    cmds:
      - shfmt --simplify --diff --write "${DEVENV_ROOT}" || true
    desc: "\U0001F3A8 Format \U0001F41Ashell files with shfmt"
    requires:
      vars:
        - DEVENV_ROOT
  ci:lint:
    aliases:
      - lint
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    desc: "\U0001F50D Run all linting tasks"
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:lint:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:lint:md:
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:lint:md:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:lint:md:cspell:
    aliases:
      - cspell
    cmds:
      - cspell --root "${DEVENV_ROOT}" ./**/*.md
    desc: "\U0001F50D Lint \U0001F4DDMarkdown files with cspell"
    requires:
      vars:
        - DEVENV_ROOT
    shopt:
      - globstar
  ci:lint:md:markdownlint:
    aliases:
      - markdownlint
    cmds:
      - fd '\.md$' "${DEVENV_ROOT}" --exec-batch markdownlint {}
    desc: "\U0001F50D Lint \U0001F4DDMarkdown files with markdownlint"
    requires:
      vars:
        - DEVENV_ROOT
  ci:lint:md:mdformat:
    cmds:
      - mdformat --check "${DEVENV_ROOT}"
    desc: "\U0001F50D Lint \U0001F4DDMarkdown files with mdformat"
    requires:
      vars:
        - DEVENV_ROOT
  ci:lint:nix:
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:lint:nix:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:lint:nix:deadnix:
    aliases:
      - deadnix
    cmds:
      - deadnix --fail
    desc: "\U0001F50D Lint ❄️Nix files with deadnix"
    requires:
      vars:
        - DEVENV_ROOT
  ci:lint:nix:flake-checker:
    aliases:
      - flake-checker
    cmds:
      - flake-checker --no-telemetry --check-outdated --check-owner --check-supported --fail-mode | glow
    desc: "\U0001F50D Lint ❄️Nix flakes with flake-checker"
    requires:
      vars:
        - DEVENV_ROOT
  ci:lint:nix:nil:
    aliases:
      - nil
    cmds:
      - fd '\.nix$' "${DEVENV_ROOT}" --exec-batch nil "diagnostics"
    desc: "\U0001F50D Lint ❄️Nix files with nil"
    requires:
      vars:
        - DEVENV_ROOT
  ci:lint:nix:statix:
    aliases:
      - statix
    cmds:
      - statix check
    desc: "\U0001F50D Lint ❄️Nix files with statix"
    requires:
      vars:
        - DEVENV_ROOT
  ci:lint:sh:
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:lint:sh:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:lint:sh:shellcheck:
    cmds:
      - fd '\.(sh|bash|dash|ksh)$' "${DEVENV_ROOT}" --exec shellcheck
    desc: "\U0001F50D Lint \U0001F41Ashell files with ShellCheck"
    requires:
      vars:
        - DEVENV_ROOT
  ci:lint:sh:shfmt:
    cmds:
      - shfmt --simplify --diff "${DEVENV_ROOT}"
    desc: "\U0001F50D Lint \U0001F41Ashell files with shfmt"
    requires:
      vars:
        - DEVENV_ROOT
  ci:secops:
    aliases:
      - secops
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    desc: "\U0001F575️‍♂️ Run all SecOps tasks"
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:secops:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:secops:secrets:
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:secops:secrets:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:secops:secrets:gitleaks:
    aliases:
      - gitleaks
    cmds:
      - cmd: task '{{.ITEM}}'
        for:
          var: TASKS
    ignore_error: true
    requires:
      vars:
        - DEVENV_ROOT
    silent: true
    summary: "\U0001F5C2️ Run 'ci:secops:secrets:gitleaks:*' tasks"
    vars:
      TASKS:
        sh: task --json --list-all | yq '.tasks[].name' | grep --only-matching --extended-regexp '{{.TASK}}:[^:]+$'
  ci:secops:secrets:gitleaks:dir:
    cmds:
      - gitleaks 'dir'
    desc: "\U0001F575️‍♂️ Check for \U0001F510secrets leaks in project files with gitleaks"
    requires:
      vars:
        - DEVENV_ROOT
  ci:secops:secrets:gitleaks:git:
    cmds:
      - gitleaks 'git'
    desc: "\U0001F575️‍♂️ Check for \U0001F510secrets leaks in Git repository with gitleaks"
    requires:
      vars:
        - DEVENV_ROOT
  list:
    aliases:
      - default
    cmds:
      - task --list
    desc: List available tasks
    silent: true
version: "3"
